/* String Compression 1- Using hashmap
		      2- loop and StringBuilder */

import java.util.*;
import java.lang.*;
import java.io.*;

class Compression
{
	public static void main (String[] args) throws java.lang.Exception
	{
		String str = "Aaaaaaaaaaaabcde";
		StringCompression sc = new StringCompression();
		sc.StringComp(str);
	}
}

class StringCompression
{
    public void StringComp(String str)
    {
        HashMap<Character, Integer> map = new HashMap<>();
        int total = 0;
        for(int i=0; i<str.length(); i++)
        {
            if(map.containsKey(str.charAt(i)))
            {
                map.put(str.charAt(i), map.get(str.charAt(i))+1);
            }
            else
            {
                map.put(str.charAt(i), 1);
            }
        }
        
        String res="";
        for(Character key : map.keySet())
        {
           res = res + key + ""+ map.get(key);
        }
        if(res.length()<str.length())
                System.out.println(res);
            else
                System.out.println(str);
    }
}

// 2- StringBuilder and loop

import java.util.*;
import java.lang.*;
import java.io.*;

class Compression
{
    public static void main (String[] args) throws java.lang.Exception
    {
        String str = "aaaaaaabbbbbbbbcde";
        StringCompression sc = new StringCompression();
        String s =sc.StringComp(str);
        System.out.println(s);
    }
}

class StringCompression
{
    public String StringComp(String str)
    {
        StringBuilder sb = new StringBuilder();
        int i=0;
        
        while(i<str.length())
        {
            char c = str.charAt(i);
            int count = 1;
            
            for(int j = i+1; j<str.length(); j++)
            {
                if(c==str.charAt(j))
                    count++;
                else
                    break; 
            }
            sb.append(c);
            sb.append(count);
            if(sb.length()>str.length())
                return str;
            i=i+count;
        }
        
        return sb.toString();
    }
}
