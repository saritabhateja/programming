/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists.length==0 || lists==null) return null;
        PriorityQueue<ListNode> pq = new PriorityQueue<>(lists.length, (a,b) -> a.val-b.val);
        ListNode start = new ListNode(0);
        ListNode curr = start;
        
        for(ListNode n : lists)
        {
            if(n != null)
                pq.add(n);
        }
         
        while(!pq.isEmpty())
        {
            ListNode temp = pq.poll();
            curr.next = temp;
            curr = temp;
            if(temp.next != null)
                pq.add(temp.next);
        }
        return start.next;
    }
}
