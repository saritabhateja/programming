public class Solution {
    public int climbStairs(int n) {
        if(n<=0)return 0;
        if(n==1)return 1;
        if(n==2)return 2;
        int one = 1;
        int two = 2;
        int all = 0;
        for(int i=2; i<n; i++)
        {
            all = one + two;
            one = two;
            two = all;
        }
        return all;
    }
}

// another solution- it is quite similar to the 1st and just for practice
public class Solution {
    public int climbStairs(int n) { 
        int[] memo = new int[n+1];
        memo[0] = 1;
        memo[1] = 1;
        return helper(memo, n);
    }
    
    private int helper(int[] memo, int n)
    {
        for(int i=2; i<=n; i++)
        {
            memo[i] = memo[i-1] + memo[i-2];
        }
        
        return memo[n];
    }
}
