// Two conditions need to be checked:
  // 1. If element is in rotated part
  // 2. If element is in sorted part
  
class Solution {
    public int search(int[] nums, int target) {
        if(nums.length==0) return -1;
        
        int low = 0;
        int high = nums.length - 1;
        
        while(low < high)
        {
            int middle = (low + high)/2;
            
            if(nums[middle] == target)
                return middle;
            
            if(nums[low] <= nums[middle])
            {
                if(target < nums[middle] && target >= nums[low])
                    high = middle-1;
                else
                    low = middle+1;
            }
                
            else
            {
                if(target > nums[middle] && target<= nums[high])
                    low = middle+1;
                else 
                    high = middle-1;
            }    
        }
        return (nums[low] == target) ? low : -1;
    }
}
