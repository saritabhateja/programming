// sorting - O(nlgn)

class Solution {
    public int hIndex(int[] citations) {
        Arrays.sort(citations);
        
        for(int i=0; i<citations.length; i++)
        {
            if(citations[i] >= (citations.length-i))
                return citations.length-i;
        }
        return 0;
    }
}

// O(n)- time and O(n)- space

class Solution {
    public int hIndex(int[] citations) {
        int len = citations.length;
        
        int[] arr = new int[len+1];
        
        for(int i=0; i<len; i++)
        {
            if(citations[i] >= len)
                arr[len] += 1;
            else
                arr[citations[i]] += 1;
        }
        
        int count = 0;
        for(int i=len; i>=0; i--)
        {
            count += arr[i];
            if(count >= i)
                return i;
        }
        return 0;
    }
}
