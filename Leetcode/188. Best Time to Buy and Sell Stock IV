class Solution {
    public int maxProfit(int k, int[] prices) {
        int len = prices.length;
        if(k>=len)
        {
            int profit = 0;
            for(int i=1; i<len; i++)
            {
                if(prices[i] - prices[i-1] > 0)
                    profit += prices[i] - prices[i-1];
            }
            return profit;
        }
        
        int[][] maxprofit = new int[k+1][prices.length];
        
        for(int i=0; i<maxprofit.length; i++)
            maxprofit[i][0] = 0;
        for(int i=0; i<maxprofit[0].length; i++)
            maxprofit[0][i] = 0;
        
        
        for(int i=1; i<maxprofit.length; i++)
        {
            int maxdiff = -prices[0];
            for(int j=1; j<maxprofit[0].length; j++)
            {
                maxprofit[i][j] = Math.max(maxprofit[i][j-1], prices[j]+maxdiff);
                maxdiff = Math.max(maxdiff, maxprofit[i-1][j] - prices[j]);
            }
        }
        return maxprofit[k][prices.length-1];
    }
}
