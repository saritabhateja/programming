// O(n)

public class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        StringBuilder s1 = new StringBuilder();
        StringBuilder s2 = new StringBuilder();
        
        helper(p, s1);
        helper(q, s2);
        
        return (s1.toString().equals(s2.toString()));
    }
    
    public void helper(TreeNode root, StringBuilder sb)
    {
        if(root==null)
        {
           sb.append("X");
           return;
        }
        sb.append(root.val);
        helper(root.left, sb);
        helper(root.right, sb);
    }
}


// no StringBuilder
public class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        if(p==null && q==null) return true;
        
        else if(p==null || q==null) return false;
        
        if(p.val == q.val)
            return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);
        
        return false;
    }
}
