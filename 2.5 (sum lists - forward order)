/* sum lists - forward order */

public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        Stack<Integer> st1 = new Stack<>();
        Stack<Integer> st2 = new Stack<>();
        
        while(l1!=null)
        {
            st1.push(l1.val);
            l1 = l1.next;
        }
        
        while(l2!=null)
        {
            st2.push(l2.val);
            l2 = l2.next;
        }
        
        ListNode head = null;
        int carry = 0;
        int sum = 0;
        
        while(!st1.isEmpty() || !st2.isEmpty() || carry!=0)
        {
            ListNode l = new ListNode(0);
            sum = (!st1.isEmpty() ? st1.pop() : 0) + (!st2.isEmpty() ? st2.pop() : 0) + carry;
            carry = sum/10;
            l.val = sum%10;
            l.next = head;
            head = l;
        }
        
       return head; 
        
    }
}
